<?php

namespace Tests\Feature;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class vulnerabilityTest extends TestCase
{
    /**
     * A basic feature test example.
     */
    public function test_get_any_user_using_proper_token(): void
    {
        $response = $this->get("api/user?token=in1C0ntoh4p1T0k3n");

        $response->assertStatus(200);
    }
    public function test_prevent_to_get_any_user_if_token_is_invalid(): void
    {
        $response = $this->get("api/user?token=4p1T0k3n");

        $response->assertStatus(403);
    }
    public function test_creating_a_user_through_api_using_proper_token(): void
    {
        $response = $this->post("/api/get/privilege/admin/create?name=admin&username=admin&email=example@mail.com&password=yadayada&token=in1C0ntoh4p1T0k3n");
        
        $response->assertStatus(200);
    }
    public function test_prevent_to_create_an_existing_user_data_through_api(): void
    {
        $response = $this->post("/api/get/privilege/admin/create?name=admin&username=admin&email=example@mail.com&password=yadayada&token=in1C0ntoh4p1T0k3n");

        $response->assertStatus(302);
    }
    public function test_prevent_anonymous_creating_a_user_through_api(): void
    {
        $response = $this->post("/api/get/privilege/admin/create?name=admin&username=admin&email=example@mail.com&password=yadayada&token=4p1T0k3n");

        $response->assertStatus(403);
    }

}
